{"version":3,"sources":["src/services/login.service.js","src/services/common.js","src/services/notes.service.js","src/components/UserCard.js","src/components/Header.js","src/components/NewNoteButton.js","src/components/Note.js","src/components/NoteList.js","src/pages/VaultPage.js","src/components/LoginForm.js","src/pages/LoginPage.js","src/components/RegisterForm.js","src/pages/RegisterPage.js","src/services/users.service.js","index.js"],"names":["login","credentials","fetch","baseURL","method","headers","body","JSON","stringify","then","response","json","token","setToken","newToken","console","log","loginHandler","user","window","state","currentUser","localStorage","setItem","serverErrorHandler","ok","status","url","getNotes","createNote","deleteNote","id","updateNote","note","UserCard","styles","userCard","userName","username","logoutButton","Header","mainHeader","NewNoteButton","newNoteButton","Note","noteItem","editingNoteID","editing","noteContent","content","noteControls","noteControlsButton","deleteButton","NoteList","isDataLoading","noteList","notes","map","reverse","join","VaultPage","container","sidebar","mainContainer","LoginForm","pageTitle","form","formBlock","formLabel","formInput","formButton","formTip","LoginPage","registerForm","RegisterPage","registerUser","updateUser","deleteUser","startApp","root","document","getElementById","announcerText","currentPage","announcer","createElement","announce","text","parse","error","renderApp","loginSubmit","target","value","password","loadNotes","logout","removeItem","registerSubmit","password2","router","page","newNote","editingElement","querySelector","targetNote","find","confirm","filter","editNote","currentEditingNoteID","innerText","focus","getItem","innerHTML"],"mappings":"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","file":"notilda.ebc9b99a.js","sourceRoot":"..","sourcesContent":["import { baseURL } from './common'\r\n\r\nconst login = credentials => {\r\n    return fetch(baseURL + '/login', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n    }).then(response => response.json())\r\n}\r\n\r\nexport default { login }\r\n","import { loginService } from './login.service'\r\n\r\nexport const baseURL = 'https://notilda.herokuapp.com/api'\r\n// export const baseURL = 'http://localhost:5000/api'\r\n\r\n\r\nexport let token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n    console.log('current token is', token)\r\n}\r\n\r\nexport const loginHandler = user => {\r\n    loginService.login(user)\r\n        .then(user => {\r\n            setToken(user.token)\r\n            window.state.currentUser = user\r\n            window.localStorage.setItem(\r\n                'loggedNotildaUser', JSON.stringify(user)\r\n            )\r\n        })\r\n}\r\n\r\nexport const serverErrorHandler = response => {\r\n    if (!response.ok) {\r\n        if (response.status === 401) {\r\n            console.log('You must log in first.')\r\n        }\r\n    }\r\n} \r\n","import { baseURL } from './common'\r\n\r\nimport { serverErrorHandler } from './common'\r\n\r\nconst url = baseURL + '/notes'\r\n\r\nfunction getNotes() {\r\n  return fetch(url, {\r\n    headers: {\r\n      'Authorization': \"bearer \" + window.state.currentUser.token\r\n    }\r\n  }).then(response => {\r\n    if (!response.ok) return serverErrorHandler(response)\r\n    return response.json()\r\n  })\r\n}\r\n\r\nfunction createNote() {\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': \"bearer \" + window.state.currentUser.token\r\n    },\r\n    body: {},\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction deleteNote(id) {\r\n  return fetch(`${url}/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': \"bearer \" + window.state.currentUser.token\r\n    },\r\n  }).then(response => response.json())\r\n}\r\n\r\nfunction updateNote(note) {\r\n  const { id } = note;\r\n  return fetch(`${url}/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"bearer \" + window.state.currentUser.token,\r\n    },\r\n    body: JSON.stringify(note),\r\n  }).then(response => response.json())\r\n}\r\n\r\nexport default { getNotes, createNote, deleteNote, updateNote }\r\n","import styles from '../main.css'\r\n\r\nconst UserCard = () => `\r\n    <div class=${styles.userCard}>\r\n        <div>Logged as</div>\r\n        <div class=${styles.userName}>${window.state.currentUser.username}</div>\r\n        <button class=${styles.logoutButton} onclick=\"window.logout()\">Logout</button>\r\n    </div>\r\n`\r\n\r\nexport default UserCard\r\n","import styles from '../main.css'\r\nimport UserCard from './UserCard'\r\n\r\n\r\nconst Header = () => `<header class=\"${styles.mainHeader}\">\r\n  <h1>Notilda</h1>\r\n  <p>Welcome home.</p>\r\n</header>\r\n${window.state.currentUser ? UserCard() : ''}\r\n`;\r\n\r\nexport default Header\r\n","import styles from '../main.css'\r\n\r\nconst NewNoteButton = () => `\r\n  <button \r\n    onClick=\"window.newNote('Empty note')\"\r\n    class=\"${styles.newNoteButton}\"\r\n  >\r\n  <i class=\"far fa-edit\"></i> Add note\r\n  </button>\r\n`;\r\n\r\nexport default NewNoteButton\r\n","import styles from '../main.css'\r\n\r\nconst Note = note => `<li\r\n    class=\"${styles.noteItem} \r\n    ${note.id === window.state.editingNoteID ? `${styles.editing}` : ''}\"\r\n  >\r\n  ${\r\n    note.id === window.state.editingNoteID\r\n      ? `<span \r\n        role=\"textbox\" \r\n        contenteditable\r\n        autofocus \r\n        placeholder=\"Type something...\" \r\n        class=\"${styles.noteContent} ${styles.editing}\" \r\n        id=\"note${note.id}\">\r\n        ${note.content}\r\n      </span>`\r\n      : `<div class=\"${styles.noteContent}\">${note.content}</div>`\r\n  }\r\n  <div class=\"${styles.noteControls}\">\r\n    ${\r\n      note.id === window.state.editingNoteID\r\n        ? `<button\r\n          class=\"${styles.noteControlsButton}\" \r\n          onclick=\"\r\n            window.updateNote('${note.id}', document.querySelector('#note${note.id}').innerText);\r\n          \">\r\n            <i class=\"far fa-save\"></i>\r\n          </button>`\r\n        : `<button \r\n          class=\"${styles.noteControlsButton}\" \r\n          onclick=\"window.editNote('${note.id}')\">\r\n            <i class=\"fas fa-pencil-alt\"></i>\r\n          </button>`\r\n    }\r\n    <button \r\n      class=\"${styles.noteControlsButton} ${styles.deleteButton}\" \r\n      onclick=\"window.deleteNote('${note.id}');\">\r\n        <i class=\"far fa-trash-alt\"></i>\r\n      </button>\r\n  </div>\r\n</li>`;\r\n\r\nexport default Note\r\n","import styles from '../main.css'\r\nimport Note from './Note'\r\n\r\nconst NoteList = () => {\r\n\r\n  if (window.state.isDataLoading) {\r\n    return `Data is loading`\r\n  } else {\r\n    return `<ul class=\"${styles.noteList}\">\r\n      ${window.state.notes\r\n        .map(note => Note(note))\r\n        .reverse()\r\n        .join('')}\r\n    </ul>`;\r\n  }\r\n}\r\nexport default NoteList\r\n","import styles from '../main.css'\r\n\r\nimport Header from '../components/Header'\r\nimport NewNoteButton from '../components/NewNoteButton'\r\nimport NoteList from '../components/NoteList'\r\n\r\nconst VaultPage = () => `<div class=\"${styles.container}\">\r\n    <div class=\"${styles.sidebar}\">\r\n        ${Header()}\r\n        ${NewNoteButton()}\r\n    </div>\r\n    <div class=\"${styles.mainContainer}\">\r\n        ${NoteList()}\r\n    </div>\r\n</div>\r\n`\r\n\r\nexport default VaultPage\r\n","import styles from '../main.css'\r\n\r\nconst LoginForm = () => `\r\n  <div>\r\n    <h2 class=\"${styles.pageTitle}\">Login</h1>\r\n    <form name=\"loginForm\" class=\"${styles.form}\" onsubmit=\"window.loginSubmit(event); return false\">\r\n      <div class=\"${styles.formBlock}\">\r\n        <label class=\"${styles.formLabel}\" for=\"username\">Username</label>\r\n        <input class=\"${styles.formInput}\" id=\"username\">\r\n      </div>\r\n      <div class=\"${styles.formBlock}\">\r\n        <label class=\"${styles.formLabel}\" for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"${styles.formInput}\" id=\"password\">\r\n      </div>\r\n      <button class=\"${styles.formButton}\">Log in</button>\r\n      <div class=\"${styles.formTip}\">Don't have account yet? \r\n        <button type=\"button\" onclick=\"window.router('register')\">Register here</button>\r\n      .</div>\r\n    </form>\r\n  </div>\r\n`\r\n\r\nexport default LoginForm\r\n","import Header from '../components/Header'\r\nimport LoginForm from '../components/LoginForm'\r\nimport styles from '../main.css'\r\n\r\nconst LoginPage = () => `\r\n    <div class=\"${styles.container}\">\r\n        <div class=\"${styles.sidebar}\">\r\n            ${Header()}\r\n        </div>\r\n        <div class=\"${styles.mainContainer}\">\r\n            ${LoginForm()}\r\n        </div>\r\n    </div>\r\n`\r\n\r\nexport default LoginPage\r\n","import styles from '../main.css'\r\n\r\nconst registerForm = () => `\r\n<div>\r\n  <h2 class=\"${styles.pageTitle}\">Register</h1>\r\n  <form name=\"loginForm\" class=\"${styles.form}\" onsubmit=\"window.registerSubmit(event) ;return false\">\r\n    <div class=\"${styles.formBlock}\">\r\n      <label class=\"${styles.formLabel}\" for=\"username\">Username</label>\r\n      <input class=\"${styles.formInput}\" id=\"username\">\r\n    </div>\r\n    <div class=\"${styles.formBlock}\">\r\n      <label class=\"${styles.formLabel}\" for=\"password\">Password</label>\r\n      <input type=\"password\" class=\"${styles.formInput}\" id=\"password\">\r\n    </div>\r\n    <div class=\"${styles.formBlock}\">\r\n      <label class=\"${styles.formLabel}\" for=\"password2\">Repeat password</label>\r\n      <input type=\"password\" class=\"${styles.formInput}\" id=\"password2\">\r\n    </div>\r\n    <button class=\"${styles.formButton}\">Register</button>\r\n    <div class=\"${styles.formTip}\">Already registered? \r\n      <button type=\"button\" onclick=\"window.router('login')\">Log in here</button>\r\n    .</div>\r\n  </form>\r\n</div>\r\n`\r\n\r\nexport default registerForm\r\n","import Header from '../components/Header'\r\nimport RegisterForm from '../components/RegisterForm'\r\nimport styles from '../main.css'\r\n\r\nconst RegisterPage = () => `\r\n    <div class=\"${styles.container}\">\r\n        <div class=\"${styles.sidebar}\">\r\n            ${Header()}\r\n        </div>\r\n        <div class=\"${styles.mainContainer}\">\r\n            ${RegisterForm()}\r\n        </div>\r\n    </div>\r\n`\r\n\r\nexport default RegisterPage\r\n","import { baseURL } from './common'\r\n\r\nconst url = baseURL + '/users'\r\n\r\nconst registerUser = user => {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    }).then(response => response.json())\r\n}\r\n\r\nconst updateUser = user => {\r\n    return fetch(`${url}/${user.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    }).then(response => response.json())\r\n}\r\n\r\nconst deleteUser = id => {\r\n    return fetch(`${url}/${id}`, {\r\n        method: 'DELETE'\r\n    }).then(response => response.json())\r\n}\r\n\r\nexport default {registerUser, updateUser, deleteUser}\r\n","import notesService from './src/services/notes.service'\r\nimport VaultPage from './src/pages/VaultPage'\r\nimport LoginPage from './src/pages/LoginPage'\r\nimport RegisterPage from './src/pages/RegisterPage'\r\nimport usersService from './src/services/users.service'\r\nimport loginService from './src/services/login.service'\r\nimport styles from './src/main.css'\r\n\r\n\r\nconst startApp = () => {\r\n  const root = document.getElementById('app-root');\r\n\r\n  window.state = {\r\n    editingNoteID: null,\r\n    announcerText: \"Test error\",\r\n    currentPage: \"login\",\r\n    isDataLoading: false,\r\n    currentUser: null,\r\n  };\r\n\r\n  window.announcer = document.createElement('dov')\r\n\r\n  window.announce = text => {\r\n    window.state.currentUser = JSON.parse(currentUser);\r\n    window.state.isDataLoading = true;\r\n    notesService.getNotes().then(notes => {\r\n      if (notes.error) {\r\n        console.log(notes.error)\r\n      } else {\r\n        window.state.notes = notes;\r\n        window.state.isDataLoading = false;\r\n        window.renderApp();\r\n      }\r\n    })\r\n  }\r\n\r\n  window.loginSubmit = ({ target }) => {\r\n    const username = target.username.value\r\n    const password = target.password.value\r\n\r\n    loginService.login({username, password})\r\n      .then(response => {\r\n        if (response.error) {\r\n          console.log(response.error)\r\n        } else {\r\n          window.state.currentPage = 'vault'\r\n          window.state.currentUser = response\r\n          window.localStorage.setItem('loggedNotildaUser', JSON.stringify(response))\r\n          window.loadNotes()\r\n          window.renderApp()\r\n        }\r\n      })\r\n  }\r\n\r\n  window.logout = () => {\r\n    window.localStorage.removeItem('loggedNotildaUser')\r\n    window.state.currentUser = null;\r\n    window.state.notes = null;\r\n    window.state.currentPage = 'login';\r\n    window.renderApp()\r\n  }\r\n\r\n  window.registerSubmit = ({ target }) => {\r\n    const username = target.username.value\r\n    const password = target.password.value\r\n    const password2 = target.password2.value\r\n\r\n    if (password !== password2) return console.log('Passwords need to match')\r\n    usersService.registerUser({ username, password })\r\n      .then(response => {\r\n        if (response.error) {\r\n          console.log(response.error)\r\n        } else {\r\n          window.state.currentPage = \"login\"\r\n          window.renderApp();\r\n        }\r\n      })\r\n  }\r\n\r\n  window.router = page => {\r\n    window.state.currentPage = page;\r\n    window.renderApp();\r\n  }\r\n  \r\n  window.loadNotes = () => {\r\n    window.state.isDataLoading = true;\r\n    notesService.getNotes().then(notes => {\r\n      if (notes.error) {\r\n        console.log(notes.error)\r\n      } else {\r\n        window.state.notes = notes;\r\n        window.state.isDataLoading = false;\r\n        window.renderApp();\r\n      }\r\n    })\r\n  }\r\n\r\n  window.newNote = () => {\r\n    notesService.createNote().then(note => {\r\n      window.state.notes = [...window.state.notes, note]\r\n      window.state.editingNoteID = note.id;\r\n      window.renderApp();\r\n      \r\n      const editingElement = document.querySelector(`.${styles.editing} span`);\r\n      console.log(\"test\", editingElement)\r\n    })\r\n  };\r\n\r\n  window.updateNote = (id, content) => {\r\n    const targetNote = window.state.notes.find(note => note.id === id)\r\n    targetNote.content = content;\r\n    notesService.updateNote(targetNote).then(note => {\r\n      window.state.notes = window.state.notes.map(note => note.id === id ? { ...note, content: content } : note)\r\n      window.state.editingNoteID = null;\r\n      window.renderApp();\r\n    })\r\n  };\r\n\r\n  window.deleteNote = id => {\r\n    if (window.state.editingNoteID && window.state.editingNoteID == id) {\r\n      window.state.editingNoteID = null;\r\n    }\r\n    if (confirm('Are you sure you want to delete this note?')) {\r\n      notesService.deleteNote(id).then(() => {\r\n        window.state.notes = window.state.notes.filter(note => note.id !== id);\r\n        window.renderApp()\r\n      })\r\n    }\r\n  };\r\n\r\n  window.editNote = id => {\r\n    if (window.state.editingNoteID) {\r\n      const currentEditingNoteID = window.state.editingNoteID;\r\n      if (confirm('You have unsaved work on an editing note. Do you want to save it?')) {\r\n        window.updateNote(\r\n          currentEditingNoteID,\r\n          document.querySelector(`#note${currentEditingNoteID}`).innerText,\r\n        );\r\n      }\r\n    }\r\n    window.state.editingNoteID = id;\r\n    window.renderApp();\r\n    \r\n    const editingElement = document.querySelector(`.${styles.editing} span`);\r\n    console.log(\"test\", editingElement)\r\n    editingElement.focus()\r\n  };\r\n\r\n  const currentUser = window.localStorage.getItem('loggedNotildaUser')\r\n\r\n  if (currentUser) {\r\n    window.state.currentPage = \"vault\";\r\n    window.state.currentUser = JSON.parse(currentUser);\r\n    window.loadNotes();\r\n  } else {\r\n    window.state.currentPage = \"login\";\r\n  }\r\n\r\n\r\n\r\n  window.renderApp = () => {\r\n    switch(window.state.currentPage) {\r\n      case \"vault\":\r\n        \r\n        root.innerHTML = VaultPage();\r\n        break;\r\n      case \"login\":\r\n        root.innerHTML = LoginPage()\r\n        break;\r\n      case \"register\":\r\n        root.innerHTML = RegisterPage()\r\n        break;\r\n    }\r\n  };\r\n\r\n  window.renderApp();\r\n};\r\n\r\nstartApp();\r\n"]}